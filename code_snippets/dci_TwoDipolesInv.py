import numpy as np
import mmt_dipole_cuboid_inversion as dci
from pathlib import Path

# Data generated by the generate_two_dipoles.py script:
datadir = Path("./two_dipoles_sep_data")
dipole_sep = 10  # Âµm
scanfile = datadir / f'two_dipoles_sep_{dipole_sep:02d}_Bzgrid.txt'
cuboidfile = datadir / f'two_dipoles_sep_{dipole_sep:02d}_cuboids.txt'

# Use the coords of lower-left and upper-right sensors to define scan surface:
sensor_domain = np.array([[0, 0], [100., 100.]]) * 1e-6
(scan_spacing, scan_deltax, scan_deltay,
 scan_area, scan_height) = (2e-6, 1e-6, 1e-6, 4e-12, 2e-6)
# First parameter contains the surface scan corner coords, but here we
# use the sensor positions instead:
dip_inversion = dci.DipoleCuboidInversion(None, sensor_domain, scan_spacing,
                                          scan_deltax, scan_deltay,
                                          scan_area, scan_height)

dip_inversion.read_files(scanfile, cuboidfile, cuboid_scaling_factor=1e-6)
dip_inversion.set_scan_domain(gen_sd_mesh_from='sensor_center_domain')
dip_inversion.prepare_matrix(method='cython')
dip_inversion.calculate_inverse(method='scipy_pinv')
